version: '3.7'

services:
  redis:
    image: redis
    container_name: redis-chat
    restart: always
    ports:
      - 6379:6379
    command: redis-server --requirepass 123@Mudar
    networks:
      - kafka-network 
    
  postgresdb:
    container_name: postgresdb
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: accounts
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123@Mudar
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 5432:5432
    networks:
      - kafka-network  

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    networks:
      - kafka-network 

  mongodbMessages:
    image: mongo
    container_name: mongodb-Messages
    restart: always
    ports:
      - 27018:27018
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    networks:
      - kafka-network 
      
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    networks:
      - kafka-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka1:
    image: confluentinc/cp-kafka:6.2.0
    container_name: kafka1
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-network

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:6.2.0
    restart: always
    container_name: ksqldb-server
    depends_on:
      - kafka1
    ports:
      - "8088:8088"
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: kafka1:29092
    networks:
      - kafka-network

  kafka-connect:
    image: confluentinc/cp-kafka-connect:6.2.0
    container_name: kafka-connect
    restart: always
    depends_on:
      - kafka1
      # - control-center
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka1:29092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_PRODUCER_TOPIC_CREATION_ENABLE: "true"
      CONNECT_PRODUCER_TOPIC_AUTO_CREATE: "true"
      CONNECT_PRODUCER_TOPIC_AUTO_CREATE_REPLICATION_FACTOR: 1
      CONNECT_PRODUCER_TOPIC_AUTO_CREATE_PARTITIONS: 1
    networks:
      - kafka-network
    user: root
    volumes:
      - ./connect-plugins:/usr/share/connect-plugins
      - ./connect-plugins:/usr/share/confluent-hub-components
    command: >
      bash -c "confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.7.2 && confluent-hub install --no-prompt mongodb/kafka-connect-mongodb:1.5.0 && /etc/confluent/docker/run"

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.1
    container_name: control-center
    restart: always
    depends_on:
      - kafka1
      - kafka-connect
      - ksqldb-server
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka1:29092
      CONTROL_CENTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'http://kafka-connect:8083'
      CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION_FACTOR: 1
      CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: '/connectors'
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    networks:
      - kafka-network

  auth-api:
    container_name: auth-api
    hostname: auth
    build:
      context: ../backend/auth/auth
      dockerfile: Dockerfile
    ports:
      - 5120:80
    restart: always
    networks: 
      - kafka-network
  
  contacts-api:
    container_name: contacts_api
    hostname: contactsApi
    build:
      context: ../backend/contacts
      dockerfile: Dockerfile
    ports:
      - 5051:5051
    restart: always
    networks: 
      - kafka-network
    environment:
      - MONGODB_URI=mongodb://admin:admin@mongo:27017

  messager-api:
    hostname: messagerApi
    container_name: messager_api
    build:
      context: ../backend/messager
      dockerfile: Dockerfile
    ports:
      - 5055:5055
    restart: always
    networks: 
      - kafka-network
    environment:
      - MONGODB_URI=mongodb://admin:admin@mongo:27017

  frontend:
    container_name: front
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - 8081:80
    restart: always



networks:
  kafka-network:
    driver: bridge
